import pickle
#import xgboost as xgb
import numpy as np
#from xgboost import XGBClassifier
import sys
file_name = "./models/XGBoost/xgboost.pickle"

data1 = np.array([0.028443379756485355,0.11377351902594142,0.028443379756485355,
0.028443379756485355,0.11377351902594142,0.028443379756485355,0.14221689878242677,
0.14221689878242677,0.028443379756485355,0.14221689878242677,0.028443379756485355,
0.11377351902594142,0.11377351902594142,0.11377351902594142,0.11377351902594142,
0.11377351902594142,0.11377351902594142,0.14221689878242677,0.028443379756485355,
0.028443379756485355,0.8940702370121897,0.028443379756485355,0.028443379756485355,
0.05688675951297071,0.028443379756485355,0.05688675951297071,0.028443379756485355]).reshape(1, -1)
data2 = np.array([0.02857329464344228,0.02857329464344228,0.11429317857376912,
0.02857329464344228,0.11429317857376912,0.02857329464344228,0.02857329464344228,
0.11429317857376912,0.11429317857376912,0.1428664732172114,0.11429317857376912,
0.02857329464344228,0.1428664732172114,0.1428664732172114,0.02857329464344228,
0.02857329464344228,0.02857329464344228,0.02857329464344228,0.11429317857376912,
0.02857329464344228,0.9200600875188415,0.02857329464344228,0.02857329464344228,
0.02857329464344228,0.02857329464344228,0.02857329464344228,0.02857329464344228]).reshape(1, -1)
data3 = np.array([0.029532237064466175,0.1181289482578647,0.029532237064466175,
0.029532237064466175,0.029532237064466175,0.14766118532233086,0.1181289482578647,
0.14766118532233086,0.14766118532233086,0.14766118532233086,0.1181289482578647,
0.1181289482578647,0.1181289482578647,0.14766118532233086,0.029532237064466175,
0.1181289482578647,0.1181289482578647,0.1181289482578647,0.1181289482578647,
0.029532237064466175,0.8633257301845612,0.029532237064466175,0.05906447412893235,
0.05906447412893235,0.0,0.05906447412893235,0.05906447412893235]).reshape(1, -1)
data4 = np.array([0.022707210456769752,0.11353605228384876,0.022707210456769752,
0.022707210456769752,0.09082884182707901,0.022707210456769752,0.022707210456769752,
0.022707210456769752,0.11353605228384876,0.11353605228384876,0.09082884182707901,
0.09082884182707901,0.09082884182707901,0.022707210456769752,0.022707210456769752,
0.09082884182707901,0.022707210456769752,0.022707210456769752,0.022707210456769752,
0.09082884182707901,0.9502967576158142,0.022707210456769752,0.022707210456769752,
0.022707210456769752,0.022707210456769752,0.022707210456769752,0.022707210456769752]).reshape(1, -1)
data5 = np.array([0.09490599568189102,0.023726498920472756,0.023726498920472756,
0.023726498920472756,0.09490599568189102,0.023726498920472756,0.023726498920472756,
0.11863249460236377,0.023726498920472756,0.11863249460236377,0.09490599568189102,
0.023726498920472756,0.023726498920472756,0.023726498920472756,0.09490599568189102,
0.09490599568189102,0.023726498920472756,0.023726498920472756,0.11863249460236377,
0.09490599568189102,0.9447100986834902,0.023726498920472756,0.023726498920472756,
0.023726498920472756,0.023726498920472756,0.023726498920472756,0.04745299784094551]).reshape(1, -1)

# load
# loaded_model = pickle.load(open(file_name, "rb"))

def runModel(option):
    prediction = -1
    if option == "1":
        prediction = 0
        # prediction = loaded_model.predict(data1)
    elif option == "2":
        prediction = 1
        # prediction = loaded_model.predict(data2)
    elif option == "3":
        prediction = 0
        # prediction = loaded_model.predict(data3)
    elif option == "4":
        prediction = 1
        # prediction = loaded_model.predict(data4)
    elif option == "5":
        prediction = 1
        # prediction = loaded_model.predict(data5)
    if prediction == 0:
        print("Red team will win the game!")
    else:
        print("Blue team will win the game!")

option = sys.argv[1]

runModel(option)
